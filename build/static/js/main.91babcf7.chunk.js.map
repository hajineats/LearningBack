{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","console","log","noteService","then","response","data","length","noteToBeDisplayed","filter","event","map","find","n","changedNote","toggleImportanceOf","onSubmit","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"2JAWeA,EATF,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,iBACXC,EAAQF,EAAKG,UAAY,qBAAqB,iBACpD,OACI,+BACKH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCN1CI,EAAU,kCAYD,EAVA,WACX,OAAOC,IAAMC,IAAIF,IASN,EAPA,SAAAG,GACX,OAAOF,IAAMG,KAAKJ,EAAQG,IAMf,EAJA,SAACE,EAAIF,GAChB,OAAOF,IAAMK,IAAN,UAAaN,EAAb,YAAwBK,GAAKF,ICqEzBI,EA1EH,WACR,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,cAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAYAC,qBAVa,WACTC,QAAQC,IAAI,UACZC,IAEKC,MAAK,SAAAC,GACFJ,QAAQC,IAAI,oBACZP,EAASU,EAASC,WAIf,IACfL,QAAQC,IAAI,SAAUR,EAAMa,OAAQ,SAEpC,IAgCMC,EAAoBV,EAAQJ,EAAMA,EAAMe,QAAO,SAAA9B,GAAI,OAAmB,IAAjBA,EAAKG,aAChE,OACI,gCACI,uCACA,yBAAQE,QAhBY,SAAC0B,GACzBX,GAAYD,IAeR,uBACeA,EAAQ,iBAAiB,cAExC,6BACKU,EAAkBG,KAAI,SAAAhC,GAAI,OAAE,cAAC,EAAD,CAEzBA,KAAMA,EACNC,iBAAkB,kBApBP,SAACU,GACxB,IAAMX,EAAOe,EAAMkB,MAAK,SAAAC,GAAC,OAAEA,EAAEvB,KAAKA,KAC5BwB,EAAW,2BAAOnC,GAAP,IAAaG,WAAYH,EAAKG,YAC/CqB,EACYxB,EAAKW,GAAGwB,GACfV,MAAK,SAAAC,GACNV,EAASD,EAAMiB,KAAI,SAAAhC,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAO0B,EAASC,YAc9BS,CAAmBpC,EAAKW,MAFzCX,EAAKW,SAIlB,uBAAM0B,SA7CO,SAACN,GAClBA,EAAMO,iBACN,IAAMC,EAAa,CACf5B,GAAII,EAAMa,OAAO,EACjBxB,QAASa,EACTuB,MAAM,IAAIC,MAAOC,cACjBvC,UAAWwC,KAAKC,SAAU,IAE9BpB,EACYe,GACPd,MAAK,SAAAC,GACFV,EAASD,EAAM8B,OAAON,IACtBrB,EAAW,QAiCf,UACI,uBACI4B,MAAO7B,EACP8B,SAhCI,SAAChB,GACjBT,QAAQC,IAAIQ,EAAMiB,OAAOF,OACzB5B,EAAWa,EAAMiB,OAAOF,UA+BhB,wBAAQG,KAAK,SAAb,4BCrEhBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.91babcf7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance})=>{\n    const label = note.important ? 'make not important':'make important'\n    return (\n        <li>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\nexport default Note","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/notes'\n\nconst getAll = ()=>{\n    return axios.get(baseUrl)\n}\nconst create = newObject=>{\n    return axios.post(baseUrl,newObject)\n}\nconst update = (id, newObject)=>{\n    return axios.put(`${baseUrl}/${id}`,newObject)\n}\n\nexport default {getAll, create, update}","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('type note!')\n    const [showAll, setShowAll] = useState(true)\n\n    const hook = ()=>{\n        console.log('effect')\n        noteService\n            .getAll()\n            .then(response =>{\n                console.log('promise fulfiled')\n                setNotes(response.data)\n            })\n    }\n\n    useEffect(hook,[])\n    console.log('render', notes.length, 'notes')\n\n    const handleSubmit = (event)=>{\n        event.preventDefault()\n        const noteObject = {\n            id: notes.length+1,\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() <0.5,\n        }\n        noteService\n            .create(noteObject)\n            .then(response=>{\n                setNotes(notes.concat(noteObject))\n                setNewNote('')\n            })\n    }\n\n    const handleInput = (event)=>{\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n    const handleShowAllButton = (event)=>{\n        setShowAll(!showAll)\n    }\n    const toggleImportanceOf = (id)=>{\n        const note = notes.find(n=>n.id===id)\n        const changedNote = {...note, important: !note.important}\n        noteService\n            .update(note.id,changedNote)\n            .then(response=>{\n            setNotes(notes.map(note => note.id !== id ? note : response.data))\n        })\n    }\n    const noteToBeDisplayed = showAll?notes:notes.filter(note=>note.important===true)\n    return(\n        <div>\n            <h1>Notes</h1>\n            <button onClick={handleShowAllButton}>\n                switch to {showAll?\"show important\":\"show all\"}\n            </button>\n            <ul>\n                {noteToBeDisplayed.map(note=><Note\n                    key={note.id}\n                    note={note}\n                    toggleImportance={()=>toggleImportanceOf(note.id)} />)}\n            </ul>\n            <form onSubmit={handleSubmit}>\n                <input\n                    value={newNote}\n                    onChange={handleInput}/>\n                <button type=\"submit\">submit!</button>\n            </form>\n        </div>\n    )\n\n\n}\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}